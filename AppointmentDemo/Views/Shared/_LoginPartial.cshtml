
@inject Microsoft.AspNetCore.Identity.SignInManager<AppointmentDemo.Models.ApplicationUser> signInManager

@if (signInManager.IsSignedIn(User))
{
    <form method="post" id="logoutForm" asp-action="LogOff" asp-controller="Account">
        <ul class="nav navbar-nav">
            <li class="text-white nav-link"> Hello, @User.Identity.Name !</li>
            <li><a class="text-white nav-link" href="javascript:document.getElementById('logoutForm').submit()">log Out</a> </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav">
        <li class="nav-item text-white">
            @*@Html.ActionLink("Sign Up", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })*@
            <a class="nav-link" id="registerLink" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li>
            @*@Html.ActionLink("Sign In", "Register", "Account", routeValues: null, htmlAttributes: new { id = "LoginLink" })*@

            <a class="nav-link" id="LoginLink" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    </ul>
}